// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_message_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_message_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_message_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_message_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_message_2eproto;
namespace message {
class AddFriendReq;
struct AddFriendReqDefaultTypeInternal;
extern AddFriendReqDefaultTypeInternal _AddFriendReq_default_instance_;
class AddFriendRsp;
struct AddFriendRspDefaultTypeInternal;
extern AddFriendRspDefaultTypeInternal _AddFriendRsp_default_instance_;
class AddIconReq;
struct AddIconReqDefaultTypeInternal;
extern AddIconReqDefaultTypeInternal _AddIconReq_default_instance_;
class AddIconRsp;
struct AddIconRspDefaultTypeInternal;
extern AddIconRspDefaultTypeInternal _AddIconRsp_default_instance_;
class GetIconReq;
struct GetIconReqDefaultTypeInternal;
extern GetIconReqDefaultTypeInternal _GetIconReq_default_instance_;
class GetIconRsp;
struct GetIconRspDefaultTypeInternal;
extern GetIconRspDefaultTypeInternal _GetIconRsp_default_instance_;
class LoginReq;
struct LoginReqDefaultTypeInternal;
extern LoginReqDefaultTypeInternal _LoginReq_default_instance_;
class LoginRsp;
struct LoginRspDefaultTypeInternal;
extern LoginRspDefaultTypeInternal _LoginRsp_default_instance_;
class ReplyAddFriendReq;
struct ReplyAddFriendReqDefaultTypeInternal;
extern ReplyAddFriendReqDefaultTypeInternal _ReplyAddFriendReq_default_instance_;
class ReplyAddFriendRsp;
struct ReplyAddFriendRspDefaultTypeInternal;
extern ReplyAddFriendRspDefaultTypeInternal _ReplyAddFriendRsp_default_instance_;
}  // namespace message
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace message {

// ===================================================================


// -------------------------------------------------------------------

class ReplyAddFriendRsp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.ReplyAddFriendRsp) */ {
 public:
  inline ReplyAddFriendRsp() : ReplyAddFriendRsp(nullptr) {}
  ~ReplyAddFriendRsp() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReplyAddFriendRsp(::google::protobuf::internal::ConstantInitialized);

  inline ReplyAddFriendRsp(const ReplyAddFriendRsp& from)
      : ReplyAddFriendRsp(nullptr, from) {}
  ReplyAddFriendRsp(ReplyAddFriendRsp&& from) noexcept
    : ReplyAddFriendRsp() {
    *this = ::std::move(from);
  }

  inline ReplyAddFriendRsp& operator=(const ReplyAddFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReplyAddFriendRsp& operator=(ReplyAddFriendRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReplyAddFriendRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReplyAddFriendRsp* internal_default_instance() {
    return reinterpret_cast<const ReplyAddFriendRsp*>(
               &_ReplyAddFriendRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ReplyAddFriendRsp& a, ReplyAddFriendRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(ReplyAddFriendRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReplyAddFriendRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReplyAddFriendRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReplyAddFriendRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReplyAddFriendRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReplyAddFriendRsp& from) {
    ReplyAddFriendRsp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReplyAddFriendRsp* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.ReplyAddFriendRsp";
  }
  protected:
  explicit ReplyAddFriendRsp(::google::protobuf::Arena* arena);
  ReplyAddFriendRsp(::google::protobuf::Arena* arena, const ReplyAddFriendRsp& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorFieldNumber = 1,
    kReplyuidFieldNumber = 2,
    kTouidFieldNumber = 3,
  };
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // int32 replyuid = 2;
  void clear_replyuid() ;
  ::int32_t replyuid() const;
  void set_replyuid(::int32_t value);

  private:
  ::int32_t _internal_replyuid() const;
  void _internal_set_replyuid(::int32_t value);

  public:
  // int32 touid = 3;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.ReplyAddFriendRsp)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t error_;
    ::int32_t replyuid_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class ReplyAddFriendReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.ReplyAddFriendReq) */ {
 public:
  inline ReplyAddFriendReq() : ReplyAddFriendReq(nullptr) {}
  ~ReplyAddFriendReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReplyAddFriendReq(::google::protobuf::internal::ConstantInitialized);

  inline ReplyAddFriendReq(const ReplyAddFriendReq& from)
      : ReplyAddFriendReq(nullptr, from) {}
  ReplyAddFriendReq(ReplyAddFriendReq&& from) noexcept
    : ReplyAddFriendReq() {
    *this = ::std::move(from);
  }

  inline ReplyAddFriendReq& operator=(const ReplyAddFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReplyAddFriendReq& operator=(ReplyAddFriendReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReplyAddFriendReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReplyAddFriendReq* internal_default_instance() {
    return reinterpret_cast<const ReplyAddFriendReq*>(
               &_ReplyAddFriendReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ReplyAddFriendReq& a, ReplyAddFriendReq& b) {
    a.Swap(&b);
  }
  inline void Swap(ReplyAddFriendReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReplyAddFriendReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReplyAddFriendReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReplyAddFriendReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReplyAddFriendReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReplyAddFriendReq& from) {
    ReplyAddFriendReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReplyAddFriendReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.ReplyAddFriendReq";
  }
  protected:
  explicit ReplyAddFriendReq(::google::protobuf::Arena* arena);
  ReplyAddFriendReq(::google::protobuf::Arena* arena, const ReplyAddFriendReq& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReplyStatFieldNumber = 1,
    kReplyUidFieldNumber = 2,
    kToUidFieldNumber = 3,
  };
  // int32 reply_stat = 1;
  void clear_reply_stat() ;
  ::int32_t reply_stat() const;
  void set_reply_stat(::int32_t value);

  private:
  ::int32_t _internal_reply_stat() const;
  void _internal_set_reply_stat(::int32_t value);

  public:
  // int32 reply_uid = 2;
  void clear_reply_uid() ;
  ::int32_t reply_uid() const;
  void set_reply_uid(::int32_t value);

  private:
  ::int32_t _internal_reply_uid() const;
  void _internal_set_reply_uid(::int32_t value);

  public:
  // int32 to_uid = 3;
  void clear_to_uid() ;
  ::int32_t to_uid() const;
  void set_to_uid(::int32_t value);

  private:
  ::int32_t _internal_to_uid() const;
  void _internal_set_to_uid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.ReplyAddFriendReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t reply_stat_;
    ::int32_t reply_uid_;
    ::int32_t to_uid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class LoginRsp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.LoginRsp) */ {
 public:
  inline LoginRsp() : LoginRsp(nullptr) {}
  ~LoginRsp() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LoginRsp(::google::protobuf::internal::ConstantInitialized);

  inline LoginRsp(const LoginRsp& from)
      : LoginRsp(nullptr, from) {}
  LoginRsp(LoginRsp&& from) noexcept
    : LoginRsp() {
    *this = ::std::move(from);
  }

  inline LoginRsp& operator=(const LoginRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginRsp& operator=(LoginRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoginRsp* internal_default_instance() {
    return reinterpret_cast<const LoginRsp*>(
               &_LoginRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(LoginRsp& a, LoginRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(LoginRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LoginRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LoginRsp& from) {
    LoginRsp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LoginRsp* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.LoginRsp";
  }
  protected:
  explicit LoginRsp(::google::protobuf::Arena* arena);
  LoginRsp(::google::protobuf::Arena* arena, const LoginRsp& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorFieldNumber = 1,
  };
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.LoginRsp)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t error_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class LoginReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.LoginReq) */ {
 public:
  inline LoginReq() : LoginReq(nullptr) {}
  ~LoginReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LoginReq(::google::protobuf::internal::ConstantInitialized);

  inline LoginReq(const LoginReq& from)
      : LoginReq(nullptr, from) {}
  LoginReq(LoginReq&& from) noexcept
    : LoginReq() {
    *this = ::std::move(from);
  }

  inline LoginReq& operator=(const LoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginReq& operator=(LoginReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoginReq* internal_default_instance() {
    return reinterpret_cast<const LoginReq*>(
               &_LoginReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(LoginReq& a, LoginReq& b) {
    a.Swap(&b);
  }
  inline void Swap(LoginReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LoginReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LoginReq& from) {
    LoginReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LoginReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.LoginReq";
  }
  protected:
  explicit LoginReq(::google::protobuf::Arena* arena);
  LoginReq(::google::protobuf::Arena* arena, const LoginReq& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokenFieldNumber = 2,
    kUidFieldNumber = 1,
  };
  // string token = 2;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // int32 uid = 1;
  void clear_uid() ;
  ::int32_t uid() const;
  void set_uid(::int32_t value);

  private:
  ::int32_t _internal_uid() const;
  void _internal_set_uid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.LoginReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      30, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::int32_t uid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class GetIconRsp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.GetIconRsp) */ {
 public:
  inline GetIconRsp() : GetIconRsp(nullptr) {}
  ~GetIconRsp() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetIconRsp(::google::protobuf::internal::ConstantInitialized);

  inline GetIconRsp(const GetIconRsp& from)
      : GetIconRsp(nullptr, from) {}
  GetIconRsp(GetIconRsp&& from) noexcept
    : GetIconRsp() {
    *this = ::std::move(from);
  }

  inline GetIconRsp& operator=(const GetIconRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetIconRsp& operator=(GetIconRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetIconRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetIconRsp* internal_default_instance() {
    return reinterpret_cast<const GetIconRsp*>(
               &_GetIconRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(GetIconRsp& a, GetIconRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(GetIconRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetIconRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetIconRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetIconRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetIconRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetIconRsp& from) {
    GetIconRsp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetIconRsp* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.GetIconRsp";
  }
  protected:
  explicit GetIconRsp(::google::protobuf::Arena* arena);
  GetIconRsp(::google::protobuf::Arena* arena, const GetIconRsp& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIconPixmapFieldNumber = 2,
    kErrorFieldNumber = 1,
  };
  // bytes icon_pixmap = 2;
  void clear_icon_pixmap() ;
  const std::string& icon_pixmap() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_icon_pixmap(Arg_&& arg, Args_... args);
  std::string* mutable_icon_pixmap();
  PROTOBUF_NODISCARD std::string* release_icon_pixmap();
  void set_allocated_icon_pixmap(std::string* value);

  private:
  const std::string& _internal_icon_pixmap() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_icon_pixmap(
      const std::string& value);
  std::string* _internal_mutable_icon_pixmap();

  public:
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.GetIconRsp)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr icon_pixmap_;
    ::int32_t error_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class GetIconReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.GetIconReq) */ {
 public:
  inline GetIconReq() : GetIconReq(nullptr) {}
  ~GetIconReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetIconReq(::google::protobuf::internal::ConstantInitialized);

  inline GetIconReq(const GetIconReq& from)
      : GetIconReq(nullptr, from) {}
  GetIconReq(GetIconReq&& from) noexcept
    : GetIconReq() {
    *this = ::std::move(from);
  }

  inline GetIconReq& operator=(const GetIconReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetIconReq& operator=(GetIconReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetIconReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetIconReq* internal_default_instance() {
    return reinterpret_cast<const GetIconReq*>(
               &_GetIconReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(GetIconReq& a, GetIconReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetIconReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetIconReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetIconReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetIconReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetIconReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetIconReq& from) {
    GetIconReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetIconReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.GetIconReq";
  }
  protected:
  explicit GetIconReq(::google::protobuf::Arena* arena);
  GetIconReq(::google::protobuf::Arena* arena, const GetIconReq& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUrlFieldNumber = 1,
  };
  // string url = 1;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // @@protoc_insertion_point(class_scope:message.GetIconReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      30, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr url_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class AddIconRsp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.AddIconRsp) */ {
 public:
  inline AddIconRsp() : AddIconRsp(nullptr) {}
  ~AddIconRsp() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddIconRsp(::google::protobuf::internal::ConstantInitialized);

  inline AddIconRsp(const AddIconRsp& from)
      : AddIconRsp(nullptr, from) {}
  AddIconRsp(AddIconRsp&& from) noexcept
    : AddIconRsp() {
    *this = ::std::move(from);
  }

  inline AddIconRsp& operator=(const AddIconRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddIconRsp& operator=(AddIconRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddIconRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddIconRsp* internal_default_instance() {
    return reinterpret_cast<const AddIconRsp*>(
               &_AddIconRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(AddIconRsp& a, AddIconRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(AddIconRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddIconRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddIconRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddIconRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddIconRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AddIconRsp& from) {
    AddIconRsp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddIconRsp* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.AddIconRsp";
  }
  protected:
  explicit AddIconRsp(::google::protobuf::Arena* arena);
  AddIconRsp(::google::protobuf::Arena* arena, const AddIconRsp& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUrlFieldNumber = 2,
    kErrorFieldNumber = 1,
  };
  // string url = 2;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.AddIconRsp)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      30, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr url_;
    ::int32_t error_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class AddIconReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.AddIconReq) */ {
 public:
  inline AddIconReq() : AddIconReq(nullptr) {}
  ~AddIconReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddIconReq(::google::protobuf::internal::ConstantInitialized);

  inline AddIconReq(const AddIconReq& from)
      : AddIconReq(nullptr, from) {}
  AddIconReq(AddIconReq&& from) noexcept
    : AddIconReq() {
    *this = ::std::move(from);
  }

  inline AddIconReq& operator=(const AddIconReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddIconReq& operator=(AddIconReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddIconReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddIconReq* internal_default_instance() {
    return reinterpret_cast<const AddIconReq*>(
               &_AddIconReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(AddIconReq& a, AddIconReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AddIconReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddIconReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddIconReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddIconReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddIconReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AddIconReq& from) {
    AddIconReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddIconReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.AddIconReq";
  }
  protected:
  explicit AddIconReq(::google::protobuf::Arena* arena);
  AddIconReq(::google::protobuf::Arena* arena, const AddIconReq& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContentsFieldNumber = 2,
    kUidFieldNumber = 1,
  };
  // bytes contents = 2;
  void clear_contents() ;
  const std::string& contents() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contents(Arg_&& arg, Args_... args);
  std::string* mutable_contents();
  PROTOBUF_NODISCARD std::string* release_contents();
  void set_allocated_contents(std::string* value);

  private:
  const std::string& _internal_contents() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contents(
      const std::string& value);
  std::string* _internal_mutable_contents();

  public:
  // int32 uid = 1;
  void clear_uid() ;
  ::int32_t uid() const;
  void set_uid(::int32_t value);

  private:
  ::int32_t _internal_uid() const;
  void _internal_set_uid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.AddIconReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr contents_;
    ::int32_t uid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class AddFriendRsp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.AddFriendRsp) */ {
 public:
  inline AddFriendRsp() : AddFriendRsp(nullptr) {}
  ~AddFriendRsp() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddFriendRsp(::google::protobuf::internal::ConstantInitialized);

  inline AddFriendRsp(const AddFriendRsp& from)
      : AddFriendRsp(nullptr, from) {}
  AddFriendRsp(AddFriendRsp&& from) noexcept
    : AddFriendRsp() {
    *this = ::std::move(from);
  }

  inline AddFriendRsp& operator=(const AddFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddFriendRsp& operator=(AddFriendRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddFriendRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddFriendRsp* internal_default_instance() {
    return reinterpret_cast<const AddFriendRsp*>(
               &_AddFriendRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AddFriendRsp& a, AddFriendRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(AddFriendRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddFriendRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddFriendRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddFriendRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddFriendRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AddFriendRsp& from) {
    AddFriendRsp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddFriendRsp* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.AddFriendRsp";
  }
  protected:
  explicit AddFriendRsp(::google::protobuf::Arena* arena);
  AddFriendRsp(::google::protobuf::Arena* arena, const AddFriendRsp& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorFieldNumber = 1,
    kFromuidFieldNumber = 2,
    kDestuidFieldNumber = 3,
  };
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // int32 fromuid = 2;
  void clear_fromuid() ;
  ::int32_t fromuid() const;
  void set_fromuid(::int32_t value);

  private:
  ::int32_t _internal_fromuid() const;
  void _internal_set_fromuid(::int32_t value);

  public:
  // int32 destuid = 3;
  void clear_destuid() ;
  ::int32_t destuid() const;
  void set_destuid(::int32_t value);

  private:
  ::int32_t _internal_destuid() const;
  void _internal_set_destuid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.AddFriendRsp)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t error_;
    ::int32_t fromuid_;
    ::int32_t destuid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};// -------------------------------------------------------------------

class AddFriendReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.AddFriendReq) */ {
 public:
  inline AddFriendReq() : AddFriendReq(nullptr) {}
  ~AddFriendReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddFriendReq(::google::protobuf::internal::ConstantInitialized);

  inline AddFriendReq(const AddFriendReq& from)
      : AddFriendReq(nullptr, from) {}
  AddFriendReq(AddFriendReq&& from) noexcept
    : AddFriendReq() {
    *this = ::std::move(from);
  }

  inline AddFriendReq& operator=(const AddFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddFriendReq& operator=(AddFriendReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddFriendReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddFriendReq* internal_default_instance() {
    return reinterpret_cast<const AddFriendReq*>(
               &_AddFriendReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AddFriendReq& a, AddFriendReq& b) {
    a.Swap(&b);
  }
  inline void Swap(AddFriendReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddFriendReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddFriendReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddFriendReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddFriendReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AddFriendReq& from) {
    AddFriendReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddFriendReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "message.AddFriendReq";
  }
  protected:
  explicit AddFriendReq(::google::protobuf::Arena* arena);
  AddFriendReq(::google::protobuf::Arena* arena, const AddFriendReq& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFromnameFieldNumber = 2,
    kDescMsgFieldNumber = 4,
    kFromnickFieldNumber = 5,
    kFromiconFieldNumber = 6,
    kFromuidFieldNumber = 1,
    kDestuidFieldNumber = 3,
  };
  // string fromname = 2;
  void clear_fromname() ;
  const std::string& fromname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fromname(Arg_&& arg, Args_... args);
  std::string* mutable_fromname();
  PROTOBUF_NODISCARD std::string* release_fromname();
  void set_allocated_fromname(std::string* value);

  private:
  const std::string& _internal_fromname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fromname(
      const std::string& value);
  std::string* _internal_mutable_fromname();

  public:
  // string desc_msg = 4;
  void clear_desc_msg() ;
  const std::string& desc_msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_desc_msg(Arg_&& arg, Args_... args);
  std::string* mutable_desc_msg();
  PROTOBUF_NODISCARD std::string* release_desc_msg();
  void set_allocated_desc_msg(std::string* value);

  private:
  const std::string& _internal_desc_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_desc_msg(
      const std::string& value);
  std::string* _internal_mutable_desc_msg();

  public:
  // string fromnick = 5;
  void clear_fromnick() ;
  const std::string& fromnick() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fromnick(Arg_&& arg, Args_... args);
  std::string* mutable_fromnick();
  PROTOBUF_NODISCARD std::string* release_fromnick();
  void set_allocated_fromnick(std::string* value);

  private:
  const std::string& _internal_fromnick() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fromnick(
      const std::string& value);
  std::string* _internal_mutable_fromnick();

  public:
  // string fromicon = 6;
  void clear_fromicon() ;
  const std::string& fromicon() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fromicon(Arg_&& arg, Args_... args);
  std::string* mutable_fromicon();
  PROTOBUF_NODISCARD std::string* release_fromicon();
  void set_allocated_fromicon(std::string* value);

  private:
  const std::string& _internal_fromicon() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fromicon(
      const std::string& value);
  std::string* _internal_mutable_fromicon();

  public:
  // int32 fromuid = 1;
  void clear_fromuid() ;
  ::int32_t fromuid() const;
  void set_fromuid(::int32_t value);

  private:
  ::int32_t _internal_fromuid() const;
  void _internal_set_fromuid(::int32_t value);

  public:
  // int32 destuid = 3;
  void clear_destuid() ;
  ::int32_t destuid() const;
  void set_destuid(::int32_t value);

  private:
  ::int32_t _internal_destuid() const;
  void _internal_set_destuid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.AddFriendReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      61, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr fromname_;
    ::google::protobuf::internal::ArenaStringPtr desc_msg_;
    ::google::protobuf::internal::ArenaStringPtr fromnick_;
    ::google::protobuf::internal::ArenaStringPtr fromicon_;
    ::int32_t fromuid_;
    ::int32_t destuid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// LoginReq

// int32 uid = 1;
inline void LoginReq::clear_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uid_ = 0;
}
inline ::int32_t LoginReq::uid() const {
  // @@protoc_insertion_point(field_get:message.LoginReq.uid)
  return _internal_uid();
}
inline void LoginReq::set_uid(::int32_t value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:message.LoginReq.uid)
}
inline ::int32_t LoginReq::_internal_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uid_;
}
inline void LoginReq::_internal_set_uid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uid_ = value;
}

// string token = 2;
inline void LoginReq::clear_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& LoginReq::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.LoginReq.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoginReq::set_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.LoginReq.token)
}
inline std::string* LoginReq::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:message.LoginReq.token)
  return _s;
}
inline const std::string& LoginReq::_internal_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.token_.Get();
}
inline void LoginReq::_internal_set_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(value, GetArena());
}
inline std::string* LoginReq::_internal_mutable_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* LoginReq::release_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.LoginReq.token)
  return _impl_.token_.Release();
}
inline void LoginReq::set_allocated_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.LoginReq.token)
}

// -------------------------------------------------------------------

// LoginRsp

// int32 error = 1;
inline void LoginRsp::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = 0;
}
inline ::int32_t LoginRsp::error() const {
  // @@protoc_insertion_point(field_get:message.LoginRsp.error)
  return _internal_error();
}
inline void LoginRsp::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:message.LoginRsp.error)
}
inline ::int32_t LoginRsp::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_;
}
inline void LoginRsp::_internal_set_error(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.error_ = value;
}

// -------------------------------------------------------------------

// AddFriendReq

// int32 fromuid = 1;
inline void AddFriendReq::clear_fromuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = 0;
}
inline ::int32_t AddFriendReq::fromuid() const {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.fromuid)
  return _internal_fromuid();
}
inline void AddFriendReq::set_fromuid(::int32_t value) {
  _internal_set_fromuid(value);
  // @@protoc_insertion_point(field_set:message.AddFriendReq.fromuid)
}
inline ::int32_t AddFriendReq::_internal_fromuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fromuid_;
}
inline void AddFriendReq::_internal_set_fromuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fromuid_ = value;
}

// string fromname = 2;
inline void AddFriendReq::clear_fromname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromname_.ClearToEmpty();
}
inline const std::string& AddFriendReq::fromname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.fromname)
  return _internal_fromname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddFriendReq::set_fromname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fromname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.AddFriendReq.fromname)
}
inline std::string* AddFriendReq::mutable_fromname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fromname();
  // @@protoc_insertion_point(field_mutable:message.AddFriendReq.fromname)
  return _s;
}
inline const std::string& AddFriendReq::_internal_fromname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fromname_.Get();
}
inline void AddFriendReq::_internal_set_fromname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fromname_.Set(value, GetArena());
}
inline std::string* AddFriendReq::_internal_mutable_fromname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.fromname_.Mutable( GetArena());
}
inline std::string* AddFriendReq::release_fromname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.AddFriendReq.fromname)
  return _impl_.fromname_.Release();
}
inline void AddFriendReq::set_allocated_fromname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.fromname_.IsDefault()) {
          _impl_.fromname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.AddFriendReq.fromname)
}

// int32 destuid = 3;
inline void AddFriendReq::clear_destuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.destuid_ = 0;
}
inline ::int32_t AddFriendReq::destuid() const {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.destuid)
  return _internal_destuid();
}
inline void AddFriendReq::set_destuid(::int32_t value) {
  _internal_set_destuid(value);
  // @@protoc_insertion_point(field_set:message.AddFriendReq.destuid)
}
inline ::int32_t AddFriendReq::_internal_destuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.destuid_;
}
inline void AddFriendReq::_internal_set_destuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.destuid_ = value;
}

// string desc_msg = 4;
inline void AddFriendReq::clear_desc_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.desc_msg_.ClearToEmpty();
}
inline const std::string& AddFriendReq::desc_msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.desc_msg)
  return _internal_desc_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddFriendReq::set_desc_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.desc_msg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.AddFriendReq.desc_msg)
}
inline std::string* AddFriendReq::mutable_desc_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_desc_msg();
  // @@protoc_insertion_point(field_mutable:message.AddFriendReq.desc_msg)
  return _s;
}
inline const std::string& AddFriendReq::_internal_desc_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.desc_msg_.Get();
}
inline void AddFriendReq::_internal_set_desc_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.desc_msg_.Set(value, GetArena());
}
inline std::string* AddFriendReq::_internal_mutable_desc_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.desc_msg_.Mutable( GetArena());
}
inline std::string* AddFriendReq::release_desc_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.AddFriendReq.desc_msg)
  return _impl_.desc_msg_.Release();
}
inline void AddFriendReq::set_allocated_desc_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.desc_msg_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.desc_msg_.IsDefault()) {
          _impl_.desc_msg_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.AddFriendReq.desc_msg)
}

// string fromnick = 5;
inline void AddFriendReq::clear_fromnick() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromnick_.ClearToEmpty();
}
inline const std::string& AddFriendReq::fromnick() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.fromnick)
  return _internal_fromnick();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddFriendReq::set_fromnick(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fromnick_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.AddFriendReq.fromnick)
}
inline std::string* AddFriendReq::mutable_fromnick() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fromnick();
  // @@protoc_insertion_point(field_mutable:message.AddFriendReq.fromnick)
  return _s;
}
inline const std::string& AddFriendReq::_internal_fromnick() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fromnick_.Get();
}
inline void AddFriendReq::_internal_set_fromnick(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fromnick_.Set(value, GetArena());
}
inline std::string* AddFriendReq::_internal_mutable_fromnick() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.fromnick_.Mutable( GetArena());
}
inline std::string* AddFriendReq::release_fromnick() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.AddFriendReq.fromnick)
  return _impl_.fromnick_.Release();
}
inline void AddFriendReq::set_allocated_fromnick(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromnick_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.fromnick_.IsDefault()) {
          _impl_.fromnick_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.AddFriendReq.fromnick)
}

// string fromicon = 6;
inline void AddFriendReq::clear_fromicon() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromicon_.ClearToEmpty();
}
inline const std::string& AddFriendReq::fromicon() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.fromicon)
  return _internal_fromicon();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddFriendReq::set_fromicon(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fromicon_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.AddFriendReq.fromicon)
}
inline std::string* AddFriendReq::mutable_fromicon() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fromicon();
  // @@protoc_insertion_point(field_mutable:message.AddFriendReq.fromicon)
  return _s;
}
inline const std::string& AddFriendReq::_internal_fromicon() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fromicon_.Get();
}
inline void AddFriendReq::_internal_set_fromicon(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fromicon_.Set(value, GetArena());
}
inline std::string* AddFriendReq::_internal_mutable_fromicon() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.fromicon_.Mutable( GetArena());
}
inline std::string* AddFriendReq::release_fromicon() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.AddFriendReq.fromicon)
  return _impl_.fromicon_.Release();
}
inline void AddFriendReq::set_allocated_fromicon(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromicon_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.fromicon_.IsDefault()) {
          _impl_.fromicon_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.AddFriendReq.fromicon)
}

// -------------------------------------------------------------------

// AddFriendRsp

// int32 error = 1;
inline void AddFriendRsp::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = 0;
}
inline ::int32_t AddFriendRsp::error() const {
  // @@protoc_insertion_point(field_get:message.AddFriendRsp.error)
  return _internal_error();
}
inline void AddFriendRsp::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:message.AddFriendRsp.error)
}
inline ::int32_t AddFriendRsp::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_;
}
inline void AddFriendRsp::_internal_set_error(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.error_ = value;
}

// int32 fromuid = 2;
inline void AddFriendRsp::clear_fromuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = 0;
}
inline ::int32_t AddFriendRsp::fromuid() const {
  // @@protoc_insertion_point(field_get:message.AddFriendRsp.fromuid)
  return _internal_fromuid();
}
inline void AddFriendRsp::set_fromuid(::int32_t value) {
  _internal_set_fromuid(value);
  // @@protoc_insertion_point(field_set:message.AddFriendRsp.fromuid)
}
inline ::int32_t AddFriendRsp::_internal_fromuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fromuid_;
}
inline void AddFriendRsp::_internal_set_fromuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fromuid_ = value;
}

// int32 destuid = 3;
inline void AddFriendRsp::clear_destuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.destuid_ = 0;
}
inline ::int32_t AddFriendRsp::destuid() const {
  // @@protoc_insertion_point(field_get:message.AddFriendRsp.destuid)
  return _internal_destuid();
}
inline void AddFriendRsp::set_destuid(::int32_t value) {
  _internal_set_destuid(value);
  // @@protoc_insertion_point(field_set:message.AddFriendRsp.destuid)
}
inline ::int32_t AddFriendRsp::_internal_destuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.destuid_;
}
inline void AddFriendRsp::_internal_set_destuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.destuid_ = value;
}

// -------------------------------------------------------------------

// ReplyAddFriendReq

// int32 reply_stat = 1;
inline void ReplyAddFriendReq::clear_reply_stat() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reply_stat_ = 0;
}
inline ::int32_t ReplyAddFriendReq::reply_stat() const {
  // @@protoc_insertion_point(field_get:message.ReplyAddFriendReq.reply_stat)
  return _internal_reply_stat();
}
inline void ReplyAddFriendReq::set_reply_stat(::int32_t value) {
  _internal_set_reply_stat(value);
  // @@protoc_insertion_point(field_set:message.ReplyAddFriendReq.reply_stat)
}
inline ::int32_t ReplyAddFriendReq::_internal_reply_stat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.reply_stat_;
}
inline void ReplyAddFriendReq::_internal_set_reply_stat(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.reply_stat_ = value;
}

// int32 reply_uid = 2;
inline void ReplyAddFriendReq::clear_reply_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reply_uid_ = 0;
}
inline ::int32_t ReplyAddFriendReq::reply_uid() const {
  // @@protoc_insertion_point(field_get:message.ReplyAddFriendReq.reply_uid)
  return _internal_reply_uid();
}
inline void ReplyAddFriendReq::set_reply_uid(::int32_t value) {
  _internal_set_reply_uid(value);
  // @@protoc_insertion_point(field_set:message.ReplyAddFriendReq.reply_uid)
}
inline ::int32_t ReplyAddFriendReq::_internal_reply_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.reply_uid_;
}
inline void ReplyAddFriendReq::_internal_set_reply_uid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.reply_uid_ = value;
}

// int32 to_uid = 3;
inline void ReplyAddFriendReq::clear_to_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.to_uid_ = 0;
}
inline ::int32_t ReplyAddFriendReq::to_uid() const {
  // @@protoc_insertion_point(field_get:message.ReplyAddFriendReq.to_uid)
  return _internal_to_uid();
}
inline void ReplyAddFriendReq::set_to_uid(::int32_t value) {
  _internal_set_to_uid(value);
  // @@protoc_insertion_point(field_set:message.ReplyAddFriendReq.to_uid)
}
inline ::int32_t ReplyAddFriendReq::_internal_to_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.to_uid_;
}
inline void ReplyAddFriendReq::_internal_set_to_uid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.to_uid_ = value;
}

// -------------------------------------------------------------------

// ReplyAddFriendRsp

// int32 error = 1;
inline void ReplyAddFriendRsp::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = 0;
}
inline ::int32_t ReplyAddFriendRsp::error() const {
  // @@protoc_insertion_point(field_get:message.ReplyAddFriendRsp.error)
  return _internal_error();
}
inline void ReplyAddFriendRsp::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:message.ReplyAddFriendRsp.error)
}
inline ::int32_t ReplyAddFriendRsp::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_;
}
inline void ReplyAddFriendRsp::_internal_set_error(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.error_ = value;
}

// int32 replyuid = 2;
inline void ReplyAddFriendRsp::clear_replyuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.replyuid_ = 0;
}
inline ::int32_t ReplyAddFriendRsp::replyuid() const {
  // @@protoc_insertion_point(field_get:message.ReplyAddFriendRsp.replyuid)
  return _internal_replyuid();
}
inline void ReplyAddFriendRsp::set_replyuid(::int32_t value) {
  _internal_set_replyuid(value);
  // @@protoc_insertion_point(field_set:message.ReplyAddFriendRsp.replyuid)
}
inline ::int32_t ReplyAddFriendRsp::_internal_replyuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.replyuid_;
}
inline void ReplyAddFriendRsp::_internal_set_replyuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.replyuid_ = value;
}

// int32 touid = 3;
inline void ReplyAddFriendRsp::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t ReplyAddFriendRsp::touid() const {
  // @@protoc_insertion_point(field_get:message.ReplyAddFriendRsp.touid)
  return _internal_touid();
}
inline void ReplyAddFriendRsp::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.ReplyAddFriendRsp.touid)
}
inline ::int32_t ReplyAddFriendRsp::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void ReplyAddFriendRsp::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.touid_ = value;
}

// -------------------------------------------------------------------

// AddIconReq

// int32 uid = 1;
inline void AddIconReq::clear_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uid_ = 0;
}
inline ::int32_t AddIconReq::uid() const {
  // @@protoc_insertion_point(field_get:message.AddIconReq.uid)
  return _internal_uid();
}
inline void AddIconReq::set_uid(::int32_t value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:message.AddIconReq.uid)
}
inline ::int32_t AddIconReq::_internal_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uid_;
}
inline void AddIconReq::_internal_set_uid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uid_ = value;
}

// bytes contents = 2;
inline void AddIconReq::clear_contents() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.contents_.ClearToEmpty();
}
inline const std::string& AddIconReq::contents() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.AddIconReq.contents)
  return _internal_contents();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddIconReq::set_contents(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.contents_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.AddIconReq.contents)
}
inline std::string* AddIconReq::mutable_contents() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contents();
  // @@protoc_insertion_point(field_mutable:message.AddIconReq.contents)
  return _s;
}
inline const std::string& AddIconReq::_internal_contents() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.contents_.Get();
}
inline void AddIconReq::_internal_set_contents(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.contents_.Set(value, GetArena());
}
inline std::string* AddIconReq::_internal_mutable_contents() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.contents_.Mutable( GetArena());
}
inline std::string* AddIconReq::release_contents() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.AddIconReq.contents)
  return _impl_.contents_.Release();
}
inline void AddIconReq::set_allocated_contents(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.contents_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.contents_.IsDefault()) {
          _impl_.contents_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.AddIconReq.contents)
}

// -------------------------------------------------------------------

// AddIconRsp

// int32 error = 1;
inline void AddIconRsp::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = 0;
}
inline ::int32_t AddIconRsp::error() const {
  // @@protoc_insertion_point(field_get:message.AddIconRsp.error)
  return _internal_error();
}
inline void AddIconRsp::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:message.AddIconRsp.error)
}
inline ::int32_t AddIconRsp::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_;
}
inline void AddIconRsp::_internal_set_error(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.error_ = value;
}

// string url = 2;
inline void AddIconRsp::clear_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& AddIconRsp::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.AddIconRsp.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddIconRsp::set_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.AddIconRsp.url)
}
inline std::string* AddIconRsp::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:message.AddIconRsp.url)
  return _s;
}
inline const std::string& AddIconRsp::_internal_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.url_.Get();
}
inline void AddIconRsp::_internal_set_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(value, GetArena());
}
inline std::string* AddIconRsp::_internal_mutable_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* AddIconRsp::release_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.AddIconRsp.url)
  return _impl_.url_.Release();
}
inline void AddIconRsp::set_allocated_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.AddIconRsp.url)
}

// -------------------------------------------------------------------

// GetIconReq

// string url = 1;
inline void GetIconReq::clear_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& GetIconReq::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.GetIconReq.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetIconReq::set_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.GetIconReq.url)
}
inline std::string* GetIconReq::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:message.GetIconReq.url)
  return _s;
}
inline const std::string& GetIconReq::_internal_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.url_.Get();
}
inline void GetIconReq::_internal_set_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(value, GetArena());
}
inline std::string* GetIconReq::_internal_mutable_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* GetIconReq::release_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.GetIconReq.url)
  return _impl_.url_.Release();
}
inline void GetIconReq::set_allocated_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.GetIconReq.url)
}

// -------------------------------------------------------------------

// GetIconRsp

// int32 error = 1;
inline void GetIconRsp::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = 0;
}
inline ::int32_t GetIconRsp::error() const {
  // @@protoc_insertion_point(field_get:message.GetIconRsp.error)
  return _internal_error();
}
inline void GetIconRsp::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:message.GetIconRsp.error)
}
inline ::int32_t GetIconRsp::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_;
}
inline void GetIconRsp::_internal_set_error(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.error_ = value;
}

// bytes icon_pixmap = 2;
inline void GetIconRsp::clear_icon_pixmap() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.icon_pixmap_.ClearToEmpty();
}
inline const std::string& GetIconRsp::icon_pixmap() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.GetIconRsp.icon_pixmap)
  return _internal_icon_pixmap();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetIconRsp::set_icon_pixmap(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.icon_pixmap_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.GetIconRsp.icon_pixmap)
}
inline std::string* GetIconRsp::mutable_icon_pixmap() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_icon_pixmap();
  // @@protoc_insertion_point(field_mutable:message.GetIconRsp.icon_pixmap)
  return _s;
}
inline const std::string& GetIconRsp::_internal_icon_pixmap() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.icon_pixmap_.Get();
}
inline void GetIconRsp::_internal_set_icon_pixmap(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.icon_pixmap_.Set(value, GetArena());
}
inline std::string* GetIconRsp::_internal_mutable_icon_pixmap() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.icon_pixmap_.Mutable( GetArena());
}
inline std::string* GetIconRsp::release_icon_pixmap() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.GetIconRsp.icon_pixmap)
  return _impl_.icon_pixmap_.Release();
}
inline void GetIconRsp::set_allocated_icon_pixmap(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.icon_pixmap_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.icon_pixmap_.IsDefault()) {
          _impl_.icon_pixmap_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.GetIconRsp.icon_pixmap)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace message


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_message_2eproto_2epb_2eh
